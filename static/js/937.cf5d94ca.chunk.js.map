{"version":3,"file":"static/js/937.cf5d94ca.chunk.js","mappings":"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","sources":["api.js","components/Loader/Loader.js","components/MoviesList/MoviesList.js","components/SearchBar/SearchBar.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ea0b04790d5245d0350b210d2ab5fbd3';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function serviceTrendingMovies() {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function serviceSearchMovies(query, page = 1) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    query: query,\n    page: page,\n  });\n\n  const response = await axios.get(`/search/movie?${params}`);\n  return response.data;\n}\n\nexport async function serviceMovieDetails(movieId) {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function serviceMovieCredits(movieId) {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function serviceMovieReviews(movieId) {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data;\n}","import { Hourglass } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <div>\n            <Hourglass\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"hourglass-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            colors={['#b6ddd8', '#b6ddd8']}\n          />\n        </div>\n    )\n}\n\nexport default Loader;","import { NavLink, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {/* <img\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              width={100}\n              alt=\"poster\"\n            /> */}\n            <h2>{movie.title}</h2>\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","const SearchBar = ({onSubmit}) => {\n    return (\n        <div>\n        <form\n          onSubmit={evt => {\n            evt.preventDefault();\n  \n            onSubmit(evt.target.elements.searchQuery.value);\n            evt.target.reset();\n          }}\n        >\n          <button type=\"submit\">\n            Search\n          </button>\n  \n          <input\n            name=\"searchQuery\"\n            type=\"text\"\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </div>\n    )\n}\n\nexport default SearchBar;","import { serviceSearchMovies } from 'api';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Link, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const searchValue = searchParams.get('query') || '';\n\n  useEffect(() => {\n    if (searchValue === '') {\n      return;\n    }\n    async function movieBySearchValue() {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const searchMovie = await serviceSearchMovies(searchValue);\n        if (searchMovie.results.length > 0) {\n          toast.success('Movies found successfully!');\n          setSearchMovies(searchMovie.results);\n        } else {\n          toast.error(\n            'Ooops...Nothing found. Update the search value, please!'\n          );\n          setSearchMovies([]);\n        }\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    movieBySearchValue();\n  }, [searchValue]);\n\n  const updateSearchParams = value => {\n    const nextParams = value !== '' ? { query: value } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <div>\n      <Link to=\"/\">\n        <button>Back</button>\n      </Link>\n      <SearchBar onSubmit={updateSearchParams} />\n      {searchMovies.length > 0 && <MoviesList movies={searchMovies} />}\n\n      {error && <span>Error! Please, reload this page!</span>}\n\n      {isLoading && <Loader />}\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","serviceTrendingMovies","_serviceTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","stop","serviceSearchMovies","_x","_serviceSearchMovies","_callee2","query","page","params","_args2","_context2","length","undefined","URLSearchParams","api_key","serviceMovieDetails","_x2","_serviceMovieDetails","_callee3","movieId","_context3","serviceMovieCredits","_x3","_serviceMovieCredits","_callee4","_context4","serviceMovieReviews","_x4","_serviceMovieReviews","_callee5","_context5","_jsx","children","Hourglass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","_ref","movies","location","useLocation","map","movie","NavLink","to","id","state","from","title","onSubmit","_jsxs","evt","preventDefault","target","elements","searchQuery","value","reset","type","name","placeholder","_useState","useState","_useState2","_slicedToArray","searchMovies","setSearchMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","searchValue","get","useEffect","_movieBySearchValue","searchMovie","results","toast","t0","finish","movieBySearchValue","Link","SearchBar","MoviesList","Loader","Toaster","position"],"sourceRoot":""}