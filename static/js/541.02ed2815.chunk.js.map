{"version":3,"file":"static/js/541.02ed2815.chunk.js","mappings":"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","sources":["api.js","components/Cast/Cast.js","components/Loader/Loader.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ea0b04790d5245d0350b210d2ab5fbd3';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function serviceTrendingMovies() {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function serviceSearchMovies(query, page = 1) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    query: query,\n    page: page,\n  });\n\n  const response = await axios.get(`/search/movie?${params}`);\n  return response.data;\n}\n\nexport async function serviceMovieDetails(movieId) {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function serviceMovieCredits(movieId) {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function serviceMovieReviews(movieId) {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data;\n}","import { serviceMovieCredits } from 'api';\nimport Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [movieCredits, setMovieCredits] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function fechMovieCredits() {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const creditsById = await serviceMovieCredits(movieId);\n        toast.success('Movies found successfully!');\n        const limitedCredits = creditsById.cast.slice(0, 16);\n        setMovieCredits(limitedCredits);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fechMovieCredits();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {movieCredits.map(actor => (\n          <li key={actor.cast_id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n              alt={actor.name}\n              width={150}\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n      \n      {error && <span>Error! Please, reload this page!</span>}\n\n      {isLoading && <Loader />}\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n};\n\nexport default Cast;\n","import { Hourglass } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <div>\n            <Hourglass\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"hourglass-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            colors={['#b6ddd8', '#b6ddd8']}\n          />\n        </div>\n    )\n}\n\nexport default Loader;"],"names":["API_KEY","serviceTrendingMovies","_serviceTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","stop","serviceSearchMovies","_x","_serviceSearchMovies","_callee2","query","page","params","_args2","_context2","length","undefined","URLSearchParams","api_key","serviceMovieDetails","_x2","_serviceMovieDetails","_callee3","movieId","_context3","serviceMovieCredits","_x3","_serviceMovieCredits","_callee4","_context4","serviceMovieReviews","_x4","_serviceMovieReviews","_callee5","_context5","_useState","useState","_useState2","_slicedToArray","movieCredits","setMovieCredits","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useParams","useEffect","_fechMovieCredits","creditsById","limitedCredits","toast","cast","slice","t0","finish","fechMovieCredits","_jsxs","children","_jsx","map","actor","src","profile_path","alt","name","width","character","cast_id","Loader","Toaster","position","Hourglass","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}