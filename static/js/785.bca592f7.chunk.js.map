{"version":3,"file":"static/js/785.bca592f7.chunk.js","mappings":"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","sources":["api.js","components/Loader/Loader.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ea0b04790d5245d0350b210d2ab5fbd3';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function serviceTrendingMovies() {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function serviceSearchMovies(query, page = 1) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    query: query,\n    page: page,\n  });\n\n  const response = await axios.get(`/search/movie?${params}`);\n  return response.data;\n}\n\nexport async function serviceMovieDetails(movieId) {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function serviceMovieCredits(movieId) {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function serviceMovieReviews(movieId) {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data;\n}","import { Hourglass } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <div>\n            <Hourglass\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"hourglass-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            colors={['#b6ddd8', '#b6ddd8']}\n          />\n        </div>\n    )\n}\n\nexport default Loader;","import { serviceMovieReviews } from 'api';\nimport Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function fechMovieReviews() {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const reviewsById = await serviceMovieReviews(movieId);\n        toast.success('Movies found successfully!');\n        if (reviewsById.results && reviewsById.results.length > 0) {\n          setMovieReviews(reviewsById.results);\n        } else {\n          setMovieReviews([]);\n        }\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fechMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {movieReviews.length > 0 ? (\n          movieReviews.map(review => (\n            <li key={review.id}>\n              <p>{review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n      </ul>\n\n      {error && <span>Error! Please, reload this page!</span>}\n\n      {isLoading && <Loader />}\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","serviceTrendingMovies","_serviceTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","stop","serviceSearchMovies","_x","_serviceSearchMovies","_callee2","query","page","params","_args2","_context2","length","undefined","URLSearchParams","api_key","serviceMovieDetails","_x2","_serviceMovieDetails","_callee3","movieId","_context3","serviceMovieCredits","_x3","_serviceMovieCredits","_callee4","_context4","serviceMovieReviews","_x4","_serviceMovieReviews","_callee5","_context5","_jsx","children","Hourglass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","_useState","useState","_useState2","_slicedToArray","movieReviews","setMovieReviews","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useParams","useEffect","_fechMovieReviews","reviewsById","toast","results","t0","finish","fechMovieReviews","_jsxs","map","review","author","content","id","Loader","Toaster","position"],"sourceRoot":""}